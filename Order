import java.util.List;

public class Order {
    private List<String> items;
    private double totalAmount;

    public Order(List<String> items) {
        this.items = items;
        this.totalAmount = calculateTotal();
    }

    private double calculateTotal() {
        // Lógica para calcular el total de la orden
        return 100.0; // simplificado
    }

    public void printOrder() {
        // Lógica para imprimir la orden
    }

    public void saveToDatabase() {
        // Lógica para guardar la orden en la base de datos
    }
}


///correccion
// Clase Order: solo gestiona los datos de la orden
public class Order {
    private List<String> items;
    private double totalAmount;

    public Order(List<String> items) {
        this.items = items;
        this.totalAmount = 0; // Se inicializa en 0, se calculará después
    }

    public List<String> getItems() {
        return items;
    }

    public double getTotalAmount() {
        return totalAmount;
    }

    public void setTotalAmount(double totalAmount) {
        this.totalAmount = totalAmount;
    }
}

// Clase para manejar el cálculo del total de la orden
public class OrderCalculator {
    public double calculateTotal(Order order) {
        // Lógica para calcular el total de la orden
        double total = 100.0; // simplificado
        order.setTotalAmount(total);
        return total;
    }
}

// Clase para manejar la impresión de la orden
public class OrderPrinter {
    public void printOrder(Order order) {
        // Lógica para imprimir la orden
        System.out.println("Order items: " + order.getItems());
        System.out.println("Total amount: $" + order.getTotalAmount());
    }
}

// Clase para manejar el almacenamiento de la orden en la base de datos
public class OrderRepository {
    public void saveToDatabase(Order order) {
        // Lógica para guardar la orden en la base de datos
        System.out.println("Order saved to database");
    }
}