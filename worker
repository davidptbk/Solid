public interface Worker {
    void work();
    void eat();
}

public class HumanWorker implements Worker {
    @Override
    public void work() {
        // Lógica para trabajar
    }

    @Override
    public void eat() {
        // Lógica para comer
    }
}

public class RobotWorker implements Worker {
    @Override
    public void work() {
        // Lógica para trabajar
    }

    @Override
    public void eat() {
        throw new UnsupportedOperationException("Robots don't eat");
    }
}

//correccion

public interface Workable {
    void work();
}

public interface Eatable{
    void eat();
}

public class HumanWorker implements Workable, Eatable {
    @Override
    public void work() {
        // Lógica para trabajar
        System.out.println("Human working");
    }

    @Override
    public void eat() {
        // Lógica para comer
        System.out.println("Human eating");
    }
}


public class RobotWorker implements Workeable {
    @Override
    public void work() {
        // Lógica para trabajar
        System.out.println("Robot working");
    }
  
}